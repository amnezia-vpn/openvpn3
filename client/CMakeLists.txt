include(findcoredeps)
include(findswigdeps)

if (${BUILD_SWIG_LIB})
    add_custom_command(
            OUTPUT ovpncli_wrap.cxx ovpncli_wrap.h
            COMMENT "Generating ovpncli Python swig files"
            COMMAND ${SWIG_EXECUTABLE} -c++ -python -threads -DSWIG_PYTHON_2_UNICODE -outcurrentdir -I${CORE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/ovpncli.i
            DEPENDS ovpncli.i
    )

    add_library(openvpn_plugin SHARED IMPORTED)
    set_target_properties(openvpn_plugin PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/pluginjni/${ANDROID_ABI}/libck-ovpn-plugin.so)
    message(${CMAKE_BINARY_DIR})

    add_library(ovpnclilib SHARED
          ovpncli.cpp
          ovpncli_wrap.cxx
          ovpncli_wrap.h
         )

    link_directories(${CMAKE_SOURCE_DIR}/pluginjni/${ANDROID_ABI}/)
    target_link_libraries(ovpnclilib ${PYTHON_LIBRARIES} libck-ovpn-plugin.so)

    # Use proper python library name to generate _ovpncli.so/dylib/dll
    set_target_properties(ovpnclilib PROPERTIES OUTPUT_NAME "_ovpncli")
    set_target_properties(ovpnclilib PROPERTIES PREFIX "")

    if (NOT WIN32)
        # Swig generates code with deprecated python declarations
        set_source_files_properties(ovpncli_wrap.cxx PROPERTIES COMPILE_FLAGS "-Wno-deprecated-declarations -Wno-sometimes-uninitialized -Wno-class-memaccess -Wno-unknown-warning-option")
    endif()
endif ()
